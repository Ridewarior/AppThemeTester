<?xml version = "1.0" encoding = "UTF-8" ?>
<Application xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:AppThemeTester"
             x:Class="AppThemeTester.App">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary Source="Resources/Styles/ThemeOne.xaml"/>

            <Style TargetType="Border">
                <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}"></Setter>
        <Setter Property="Stroke" Value="{AppThemeBinding Light={DynamicResource TertiaryColorLight}, Dark={DynamicResource TertiaryColorLight}}" />-->
                <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryColorLight}"></Setter>
                <Setter Property="Stroke" Value="{DynamicResource TertiaryColorLight}" />
                <Setter Property="StrokeShape" Value="RoundRectangle"/>
                <Setter Property="StrokeThickness" Value="2.8"/>
            </Style>

            <Style x:Key="BaseStyle" TargetType="Button">
                <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColorLight}, Dark={DynamicResource PrimaryColorLight}}" />-->
                <Setter Property="TextColor" Value="{DynamicResource SecondaryColorLight}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColorLight}" />
                <Setter Property="FontFamily" Value="OpenSansRegular"/>
                <Setter Property="FontAttributes" Value="Bold"></Setter>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="14,10"/>
                <Setter Property="MinimumHeightRequest" Value="44"/>
                <Setter Property="MinimumWidthRequest" Value="44"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style x:Key="AccentButton" TargetType="Button" BasedOn="{StaticResource BaseStyle}">
                <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource AccentBtnColorLight}, Dark={DynamicResource AccentBtnColorLight}}"></Setter>-->
                <Setter Property="BackgroundColor" Value="{DynamicResource AccentBtnColorLight}"/>
            </Style>

            <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource BaseStyle}">
                <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource DangerBtnColorLight}, Dark={DynamicResource DangerBtnColorLight}}"></Setter>-->
                <Setter Property="BackgroundColor" Value="{DynamicResource DangerBtnColorLight}"/>
            </Style>

            <Style TargetType="DatePicker">
                <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource TextColorLight}, Dark={DynamicResource TextColorLight}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}" />-->
                <Setter Property="TextColor" Value="{DynamicResource TextColorLight}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryColorLight}" />
                <Setter Property="FontFamily" Value="OpenSansRegular"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MinimumHeightRequest" Value="44"/>
                <Setter Property="MinimumWidthRequest" Value="44"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Entry">
                <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource TextColorLight}, Dark={DynamicResource TextColorLight}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}" />-->
                <Setter Property="TextColor" Value="{DynamicResource TextColorLight}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryColorLight}" />
                <Setter Property="FontFamily" Value="OpenSansRegular"/>
                <Setter Property="FontSize" Value="14" />
                <!--<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={DynamicResource DisabledTextColorLight}, Dark={DynamicResource DisabledTextColorLight}}" />-->
                <Setter Property="PlaceholderColor" Value="{DynamicResource DisabledTextColorLight}" />
                <Setter Property="MinimumHeightRequest" Value="44"/>
                <Setter Property="MinimumWidthRequest" Value="44"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource DisabledTextColorLight}, Dark={DynamicResource DisabledTextColorLight}}" />-->
                                    <Setter Property="TextColor" Value="{DynamicResource DisabledTextColorLight}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Label">
                <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource TextColorLight}, Dark={DynamicResource TextColorLight}}" />-->
                <Setter Property="TextColor" Value="{DynamicResource TextColorLight}" />
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="FontFamily" Value="OpenSansRegular" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource DisabledTextColorLight}, Dark={DynamicResource DisabledTextColorLight}}" />-->
                                    <Setter Property="TextColor" Value="{DynamicResource DisabledTextColorLight}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Picker">
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
                <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
                <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}" />-->
                <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryColorLight}" />
                <Setter Property="FontFamily" Value="OpenSansRegular"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MinimumHeightRequest" Value="44"/>
                <Setter Property="MinimumWidthRequest" Value="44"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource DisabledTextColorLight}, Dark={DynamicResource DisabledTextColorLight}}" />
                            <Setter Property="TitleColor" Value="{AppThemeBinding Light={DynamicResource DisabledTextColorLight}, Dark={DynamicResource DisabledTextColorLight}}" />-->
                                    <Setter Property="TextColor" Value="{DynamicResource DisabledTextColorLight}" />
                                    <Setter Property="TitleColor" Value="{DynamicResource DisabledTextColorLight}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Switch">
                <!--<Setter Property="OnColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColorLight}, Dark={DynamicResource PrimaryColorLight}}" />-->
                <Setter Property="OnColor" Value="{DynamicResource PrimaryColorLight}" />
                <Setter Property="ThumbColor" Value="{StaticResource White}" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                                    <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="On">
                                <VisualState.Setters>
                                    <!--<Setter Property="OnColor" Value="{AppThemeBinding Light={DynamicResource SwitchOnColorLight}, Dark={DynamicResource SwitchOnColorLight}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColorLight}, Dark={DynamicResource PrimaryColorLight}}" />-->
                                    <Setter Property="OnColor" Value="{DynamicResource SwitchOnColorLight}" />
                                    <Setter Property="ThumbColor" Value="{DynamicResource PrimaryColorLight}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Off">
                                <VisualState.Setters>
                                    <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="TimePicker">
                <!--<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource TextColorLight}, Dark={DynamicResource TextColorLight}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}"/>-->
                <Setter Property="TextColor" Value="{DynamicResource TextColorLight}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryColorLight}"/>
                <Setter Property="FontFamily" Value="OpenSansRegular"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MinimumHeightRequest" Value="44"/>
                <Setter Property="MinimumWidthRequest" Value="44"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Page" ApplyToDerivedTypes="True">
                <Setter Property="Padding" Value="0"/>
                <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource PageBackgroundColorLight}, Dark={DynamicResource PageBackgroundColorLight}}" />-->
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColorLight}" />
            </Style>

            <Style TargetType="Shell" ApplyToDerivedTypes="True">
                <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColorLight}, Dark={DynamicResource PrimaryColorLight}}" />-->
                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColorLight}" />
                <Setter Property="ForegroundColor" Value="{OnPlatform WinUI={StaticResource Primary}, Default={StaticResource White}}" />
                <!--<Setter Property="TitleColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}" />-->
                <Setter Property="TitleColor" Value="{DynamicResource SecondaryColorLight}" />
                <Setter Property="DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
                <Setter Property="UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray200}}" />
                <Setter Property="NavBarHasShadow" Value="False" />
                <Setter Property="TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
                <Setter Property="TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
                <Setter Property="TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
                <Setter Property="TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
                <!--<Setter Property="FlyoutBackgroundColor" Value="{AppThemeBinding Light={DynamicResource SecondaryColorLight}, Dark={DynamicResource SecondaryColorLight}}"/>-->
                <Setter Property="FlyoutBackgroundColor" Value="{DynamicResource SecondaryColorLight}"/>
            </Style>

            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles/Colors.xaml" />
                <ResourceDictionary Source="Resources/Styles/Styles.xaml" />
                <ResourceDictionary Source="Resources/Styles/DefaultTheme.xaml"/>
                <ResourceDictionary Source="Resources/Styles/ThemeOne.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
